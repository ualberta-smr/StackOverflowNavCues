lexrank.summarize("you can use session storage if you want the datum to be retrieve once per session or local storage if you want to have better control of the data 's `` expiration ''. set a arbitrary value in the fetch 's callback that you will check before fetch another time every time the app load. the link api be simple to use: same syntax be use for link you could put the datum in link and always check if there be some datum there before do the request. example this be absolutely right: - after the page reload, the main component be mount once again and the datum be fetch once again. as from my understanding, when you delete and then refresh then delete data come back. this be off course go to happen as everything be get store in memory. solution: - you must use database, when you save datum you do it in db, when you delete datum, you delete it from db & when you fetch datum then you fetch from db. so any operation like update, delete will work fine now. the question be why you expect sth different ? it be only fake api, real would work as expect. if you be correctly send change/delete request - they will be memorize and refresh will read update datum -lrb- if not cache -rrb-. if it be a spa -lrb- single Page app -rrb- there be no need for refresh - it should not happen. maybe sth go wrong with router ?", 1, function (err, toplines, text) { console.log(toplines); });

[ { weight: 0.4115102367716735,
    text: 'solution: - you must use database, when you save datum you do it in db, when you delete datum, you delete it from db & when you fetch datum then you fetch from db.',
    index: 6 } ]