I recommend you to use Google 's LINK toolkit in order to work with JSON Objects . it provide useful function and have no dependency on external library which turn out to be a huge problem during the development of android app . 

to answer you question : if you do not want to use json-simple in you project you should use the jsonobject from org.json , because it be provide by the Android JDK . for further information see link . 

bit late , but I want to share my opinion on this . 

I face this problem recently when I find a Java project with both library and they be use at the same time . 

I think that cw be easier to read and to use , for 2 main reason -lrb- for my need -rrb- : 

JsonObject be immutable . you can not add new key/value pair to a already exist JsonObject -lrb- reference here : link -rrb- 

it take a few line to pretty print a JsonObject or JsonArray , while it only take 1 line to do it with jsonobject or jsonarray . example : 

that be the code I use to get a indented json to write to a file . and with org.json I only need cw . 

another difference be the constructor . you will need a cw to create a json with cw . one step more that can be avoid . 

I be sure there be more difference -lrb- not sure if it be possible to create a cw from a String -rrb- but these be my thought . 

cw do not contain a parse class for parse the json string . whilecw contain a parse class . 

cw contain lot of getter method to get directly as int , boolean , object , string , JSON Array , etc. . cw do not contain specific method , so you need to type cast every time while get value of a particular key . 

in simple word use CW for parse alone and type cast it into CW for further use inside the program . 

jsonobject , as mention , be provide by android 's API . JsonObject be specifically use for Java EE development which be essentially for web application and network capability among other thing . 

the reason android do not prepackage jsonobject from Oracle Java ee package be because alot of the thing javax can do , be not allow within android like access the internet without permission . this mean import the entire jar file of javax would conflict with android . 

if you plan to build you own backend with Java EE , I would highly suggest use jsonobject over jsonobject . on the other hand , if you know a prebuilt rest service or something similar that support Android 's JSON even better . 

