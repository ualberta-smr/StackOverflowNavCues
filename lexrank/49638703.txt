you be free whatever information you want to add to you error response . if you it be really useful to you , there be no reason not to . Facebook do so . on the other hand I would try to not bloat a error response . 

a well design and decouple rest api imply most of the error reason with the help of the standard definition of the http error code , which still should be document within the api documentation . give this , a developer of a client be able to know the exact error only by parse the error status . 

this also mean that a client developer need to check whatever he can , straight away , without send any request to the back end . for example if the give date range be valid . 

state this , if a return error code can not be use to figure out the exact problem of the request , the design of the API interface might be not optimal . 

although as rest be only a concept , it be nearly impossible to implement a perfect restfull api , therefor there be always exception , imho . 

although this question tend to attract opinion-based answer , I will try to give some perhaps helpful hint . 

you api seem to validate user input . this input may be invalid for various reason -lrb- e.g. no parseable date , date in the past etc. -rrb- . this can never be reflect only via http status code and as such , return a http 400 and a validation error message , as you already do , be good practice . 

this validation error message should be human-readable and it should be okay for the client to display it to the user . if a field name be include -lrb- as it be in you example -rrb- , the client can even highlight the associate input field and display the error message next to it . 

if the consumer of you api be not a UI , but some kind of automated service , then error related technical field may fit the need more . -lrb- and this be where opinion come into play : many people say that the API should be agnostic of the consuming client type -rrb- . but I think in you case , you should rather investigate why the client be unable to display the CW - this should be the best and most flexible way to go to add additional validation in the future . 

