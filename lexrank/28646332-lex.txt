lexrank.summarize("the first basic thing to understand be the difference in architecture. one end you have the MVC architecture, which be base on you normal web app, use web page, and the browser make a request for a page: the browser make a request, the controller -lrb- @controller -rrb- get the model -lrb- @entity -rrb-, and create the view -lrb- JSP -rrb- from the model and the view be return back to the client. this be the basic web app architecture. on the other end, you have a restful architecture. in this case, there be no View. the controller only send back the model -lrb- or resource representation, in more restful term -rrb-. the client can be a JavaScript application, a Java server application, any application in which we expose we REST API to. with this architecture, the client decide what to do with this model. take for instance Twitter. Twitter as the web -lrb- rest -rrb- api, that allow we application to use its API to get such thing as status update, so that we can use it to put that datum in we application. that datum will come in some format like JSON. that be say, when work with spring mvc, it be first build to handle the basic web application architecture. there be may different method signature flavor that allow a view to be produce from we method. the method could return a CW where we explicitly create it, or there be implicit way where we can return some arbitrary object that get set into model attribute. but either way, somewhere along the request-response cycle, there will be a view produce. but when we use CW, we be say that we do not want a view produce. we just want to send the return object as the body, in whatever format we specify. we would not want it to be a serialized Java object -lrb- though possible -rrb-. so yes, it need to be convert to some other common type -lrb- this type be normally deal with through content negotiation - see link below -rrb-. honestly, I do not work much with spring, though I dabble with it here and there. normally, I use. to set the content type, but maybe JSON be the default. do not quote I, but if you be get JSON, and you have not specify the CW, then maybe it be the default. JSON be not the only format. for instance, the above could easily be send in xml, but you would need to have the CW to CW and I believe you need to configure the CW for JAXB. as for the JSON CW configure, when we have Jackson on the classpath. I would take some time to learn about link. it be a very important part of rest. it will help you learn about the different response format and how to map they to you method. First of all, the annotation do not annotate CW. it annotate the method, just as cw do. you code be equivalent to. now what the annotation mean be that the return value of the method will constitute the body of the http response. of course, a http response can not contain Java object. so this list of account be transform to a format suitable for rest application, typically json or xml. the choice of the format depend on the install message converter, on the value of the link of the requestmapping annotation, and on the content type that the client accept -lrb- that be available in the HTTP request header -rrb-. for example, if the request say it accept xml, but not json, and there be a message converter install that can transform the list to xml, then xml will be return. further to this, the return type be determine by. what the HTTP Request say it want - in its Accept header. try look at the initial request as see what Accept be set to. what HttpMessageConverters Spring set up. spring mvc will setup converter for xml -lrb- use jaxb -rrb- and json if Jackson library be on he classpath. if there be a choice it pick one - in this example, it happen to be JSON. this be cover in the course note. look for the note on message convertor and Content Negotiation. as mention by jb nizet, and. both be same. as @responsebody annotate the method not the list. @gmsof - install message converter here can be use as follow. thanks: -rrb-", 1, function (err, toplines, text) { console.log(toplines); });

[ { weight: 0.16970137521326764,
    text: 'for instance, the above could easily be send in xml, but you would need to have the CW to CW and I believe you need to configure the CW for JAXB.',
    index: 24 } ]